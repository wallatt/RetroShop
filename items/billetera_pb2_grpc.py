# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import billetera_pb2 as billetera__pb2


class BilleteraStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.getSaldo = channel.unary_unary(
                '/billetera.Billetera/getSaldo',
                request_serializer=billetera__pb2.saldoRequest.SerializeToString,
                response_deserializer=billetera__pb2.saldoResponse.FromString,
                )
        self.cargarSaldo = channel.unary_unary(
                '/billetera.Billetera/cargarSaldo',
                request_serializer=billetera__pb2.cargarSaldoRequest.SerializeToString,
                response_deserializer=billetera__pb2.Empty.FromString,
                )
        self.puedeHacerCompra = channel.unary_unary(
                '/billetera.Billetera/puedeHacerCompra',
                request_serializer=billetera__pb2.puedeHacerCompraRequest.SerializeToString,
                response_deserializer=billetera__pb2.puedeHacerCompraResponse.FromString,
                )
        self.hacerCompra = channel.unary_unary(
                '/billetera.Billetera/hacerCompra',
                request_serializer=billetera__pb2.hacerCompraRequest.SerializeToString,
                response_deserializer=billetera__pb2.Empty.FromString,
                )


class BilleteraServicer(object):
    """Missing associated documentation comment in .proto file."""

    def getSaldo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def cargarSaldo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def puedeHacerCompra(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def hacerCompra(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BilleteraServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'getSaldo': grpc.unary_unary_rpc_method_handler(
                    servicer.getSaldo,
                    request_deserializer=billetera__pb2.saldoRequest.FromString,
                    response_serializer=billetera__pb2.saldoResponse.SerializeToString,
            ),
            'cargarSaldo': grpc.unary_unary_rpc_method_handler(
                    servicer.cargarSaldo,
                    request_deserializer=billetera__pb2.cargarSaldoRequest.FromString,
                    response_serializer=billetera__pb2.Empty.SerializeToString,
            ),
            'puedeHacerCompra': grpc.unary_unary_rpc_method_handler(
                    servicer.puedeHacerCompra,
                    request_deserializer=billetera__pb2.puedeHacerCompraRequest.FromString,
                    response_serializer=billetera__pb2.puedeHacerCompraResponse.SerializeToString,
            ),
            'hacerCompra': grpc.unary_unary_rpc_method_handler(
                    servicer.hacerCompra,
                    request_deserializer=billetera__pb2.hacerCompraRequest.FromString,
                    response_serializer=billetera__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'billetera.Billetera', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Billetera(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def getSaldo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/billetera.Billetera/getSaldo',
            billetera__pb2.saldoRequest.SerializeToString,
            billetera__pb2.saldoResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def cargarSaldo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/billetera.Billetera/cargarSaldo',
            billetera__pb2.cargarSaldoRequest.SerializeToString,
            billetera__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def puedeHacerCompra(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/billetera.Billetera/puedeHacerCompra',
            billetera__pb2.puedeHacerCompraRequest.SerializeToString,
            billetera__pb2.puedeHacerCompraResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def hacerCompra(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/billetera.Billetera/hacerCompra',
            billetera__pb2.hacerCompraRequest.SerializeToString,
            billetera__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
