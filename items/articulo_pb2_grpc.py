# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import articulo_pb2 as articulo__pb2


class ItemServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.NuevoItem = channel.unary_unary(
                '/ItemService/NuevoItem',
                request_serializer=articulo__pb2.ItemSale.SerializeToString,
                response_deserializer=articulo__pb2.ItemId.FromString,
                )
        self.EditarItem = channel.unary_unary(
                '/ItemService/EditarItem',
                request_serializer=articulo__pb2.ItemSale.SerializeToString,
                response_deserializer=articulo__pb2.ItemId.FromString,
                )
        self.NuevoItemSaleRequest = channel.stream_unary(
                '/ItemService/NuevoItemSaleRequest',
                request_serializer=articulo__pb2.NewItemSaleRequest.SerializeToString,
                response_deserializer=articulo__pb2.ItemId.FromString,
                )
        self.UploadProductImage = channel.stream_unary(
                '/ItemService/UploadProductImage',
                request_serializer=articulo__pb2.DataChunk.SerializeToString,
                response_deserializer=articulo__pb2.UploadProductResponse.FromString,
                )
        self.GetItem = channel.unary_unary(
                '/ItemService/GetItem',
                request_serializer=articulo__pb2.ItemId.SerializeToString,
                response_deserializer=articulo__pb2.ItemSale.FromString,
                )
        self.GetItems = channel.unary_unary(
                '/ItemService/GetItems',
                request_serializer=articulo__pb2.getItemsRequest.SerializeToString,
                response_deserializer=articulo__pb2.Items.FromString,
                )
        self.GetItemsFiltered = channel.unary_unary(
                '/ItemService/GetItemsFiltered',
                request_serializer=articulo__pb2.getItemsFiltered.SerializeToString,
                response_deserializer=articulo__pb2.Items.FromString,
                )
        self.ComprarItem = channel.unary_unary(
                '/ItemService/ComprarItem',
                request_serializer=articulo__pb2.buyItemRequest.SerializeToString,
                response_deserializer=articulo__pb2.Empty.FromString,
                )
        self.ItemsComprados = channel.unary_unary(
                '/ItemService/ItemsComprados',
                request_serializer=articulo__pb2.ItemsCompraVenta.SerializeToString,
                response_deserializer=articulo__pb2.ItemsCompraVentaResponse.FromString,
                )
        self.ItemsEnVenta = channel.unary_unary(
                '/ItemService/ItemsEnVenta',
                request_serializer=articulo__pb2.ItemsCompraVenta.SerializeToString,
                response_deserializer=articulo__pb2.ItemsCompraVentaResponse.FromString,
                )
        self.DownloadProductImage = channel.unary_stream(
                '/ItemService/DownloadProductImage',
                request_serializer=articulo__pb2.DownloadProductImageRequest.SerializeToString,
                response_deserializer=articulo__pb2.DataChunk.FromString,
                )


class ItemServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def NuevoItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditarItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def NuevoItemSaleRequest(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadProductImage(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItems(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetItemsFiltered(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComprarItem(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ItemsComprados(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ItemsEnVenta(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadProductImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ItemServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'NuevoItem': grpc.unary_unary_rpc_method_handler(
                    servicer.NuevoItem,
                    request_deserializer=articulo__pb2.ItemSale.FromString,
                    response_serializer=articulo__pb2.ItemId.SerializeToString,
            ),
            'EditarItem': grpc.unary_unary_rpc_method_handler(
                    servicer.EditarItem,
                    request_deserializer=articulo__pb2.ItemSale.FromString,
                    response_serializer=articulo__pb2.ItemId.SerializeToString,
            ),
            'NuevoItemSaleRequest': grpc.stream_unary_rpc_method_handler(
                    servicer.NuevoItemSaleRequest,
                    request_deserializer=articulo__pb2.NewItemSaleRequest.FromString,
                    response_serializer=articulo__pb2.ItemId.SerializeToString,
            ),
            'UploadProductImage': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadProductImage,
                    request_deserializer=articulo__pb2.DataChunk.FromString,
                    response_serializer=articulo__pb2.UploadProductResponse.SerializeToString,
            ),
            'GetItem': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItem,
                    request_deserializer=articulo__pb2.ItemId.FromString,
                    response_serializer=articulo__pb2.ItemSale.SerializeToString,
            ),
            'GetItems': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItems,
                    request_deserializer=articulo__pb2.getItemsRequest.FromString,
                    response_serializer=articulo__pb2.Items.SerializeToString,
            ),
            'GetItemsFiltered': grpc.unary_unary_rpc_method_handler(
                    servicer.GetItemsFiltered,
                    request_deserializer=articulo__pb2.getItemsFiltered.FromString,
                    response_serializer=articulo__pb2.Items.SerializeToString,
            ),
            'ComprarItem': grpc.unary_unary_rpc_method_handler(
                    servicer.ComprarItem,
                    request_deserializer=articulo__pb2.buyItemRequest.FromString,
                    response_serializer=articulo__pb2.Empty.SerializeToString,
            ),
            'ItemsComprados': grpc.unary_unary_rpc_method_handler(
                    servicer.ItemsComprados,
                    request_deserializer=articulo__pb2.ItemsCompraVenta.FromString,
                    response_serializer=articulo__pb2.ItemsCompraVentaResponse.SerializeToString,
            ),
            'ItemsEnVenta': grpc.unary_unary_rpc_method_handler(
                    servicer.ItemsEnVenta,
                    request_deserializer=articulo__pb2.ItemsCompraVenta.FromString,
                    response_serializer=articulo__pb2.ItemsCompraVentaResponse.SerializeToString,
            ),
            'DownloadProductImage': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadProductImage,
                    request_deserializer=articulo__pb2.DownloadProductImageRequest.FromString,
                    response_serializer=articulo__pb2.DataChunk.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ItemService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ItemService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def NuevoItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/NuevoItem',
            articulo__pb2.ItemSale.SerializeToString,
            articulo__pb2.ItemId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EditarItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/EditarItem',
            articulo__pb2.ItemSale.SerializeToString,
            articulo__pb2.ItemId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def NuevoItemSaleRequest(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ItemService/NuevoItemSaleRequest',
            articulo__pb2.NewItemSaleRequest.SerializeToString,
            articulo__pb2.ItemId.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadProductImage(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/ItemService/UploadProductImage',
            articulo__pb2.DataChunk.SerializeToString,
            articulo__pb2.UploadProductResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/GetItem',
            articulo__pb2.ItemId.SerializeToString,
            articulo__pb2.ItemSale.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItems(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/GetItems',
            articulo__pb2.getItemsRequest.SerializeToString,
            articulo__pb2.Items.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetItemsFiltered(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/GetItemsFiltered',
            articulo__pb2.getItemsFiltered.SerializeToString,
            articulo__pb2.Items.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ComprarItem(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/ComprarItem',
            articulo__pb2.buyItemRequest.SerializeToString,
            articulo__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ItemsComprados(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/ItemsComprados',
            articulo__pb2.ItemsCompraVenta.SerializeToString,
            articulo__pb2.ItemsCompraVentaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ItemsEnVenta(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ItemService/ItemsEnVenta',
            articulo__pb2.ItemsCompraVenta.SerializeToString,
            articulo__pb2.ItemsCompraVentaResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadProductImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/ItemService/DownloadProductImage',
            articulo__pb2.DownloadProductImageRequest.SerializeToString,
            articulo__pb2.DataChunk.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
